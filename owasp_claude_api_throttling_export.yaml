AWSTemplateFormatVersion: '2010-09-09'
Description: OWASP Assistant API Gateway + Lambda + Claude via Bedrock

Resources:

  OWASPClaudeLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/apigateway/owasp-claude-api
      RetentionInDays: 14

  OWASPLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: OWASPClaudeLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ClaudeInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: bedrock:InvokeModel
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  OWASPClaudeFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: OWASPClaudeHandler
      Runtime: python3.10
      Handler: lambda_function.lambda_handler
      Role: !GetAtt OWASPLambdaExecutionRole.Arn
      Timeout: 30
      Code:
        ZipFile: |
          import json
          import boto3

          bedrock = boto3.client("bedrock-runtime", region_name="us-east-1")

          def lambda_handler(event, context):
              body = json.loads(event['body'])
              prompt = body.get('prompt', '')

              bedrock_input = {
                  "prompt": f"\n\nHuman: {prompt}\n\nAssistant:",
                  "max_tokens_to_sample": 500,
                  "temperature": 0.7,
                  "stop_sequences": ["\n\nHuman:"]
              }

              response = bedrock.invoke_model(
                  modelId="anthropic.claude-v2",
                  contentType="application/json",
                  accept="application/json",
                  body=json.dumps(bedrock_input)
              )

              result = json.loads(response['body'].read())
              return {
                  'statusCode': 200,
                  'headers': {'Content-Type': 'application/json'},
                  'body': json.dumps({'response': result['completion']})
              }

  OWASPClaudeAPI:
    DependsOn: OWASPClaudeLogGroup
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: OWASPClaudeAPI
      EndpointConfiguration:
        Types: ["REGIONAL"]

  OWASPClaudeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt OWASPClaudeAPI.RootResourceId
      PathPart: ask
      RestApiId: !Ref OWASPClaudeAPI

  OWASPClaudeMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId: !Ref OWASPClaudeResource
      RestApiId: !Ref OWASPClaudeAPI
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OWASPClaudeFunction.Arn}/invocations

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref OWASPClaudeFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${OWASPClaudeAPI}/*/*/*

  OWASPClaudeUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: OWASPClaudeBasicUsagePlan
      Throttle:
        RateLimit: 5
        BurstLimit: 2
      ApiStages:
        - ApiId: !Ref OWASPClaudeAPI
          Stage: prod

  OWASPClaudeApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: OWASPClaudeApiKey
      Enabled: true
      StageKeys:
        - RestApiId: !Ref OWASPClaudeAPI
          StageName: prod

  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref OWASPClaudeApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref OWASPClaudeUsagePlan

Outputs:
  ClaudeApiKey:
    Description: "API Key to access the OWASP Claude endpoint"
    Value: !Ref OWASPClaudeApiKey
    Export:
      Name: OWASPClaudeApiKey

